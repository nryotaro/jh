"""
1425mm timeout
[270,340,359,593,689,75,923,738,564,582,553,776,324,871,734,259,915,195,538,247,174,82,642,44,50,786,448,762,46,526,458,443,274,859,701,466,417,917,543,87,414,69,196,372,150,106,154,611,686,15,478,260,961,248,980,387,629,233,410,637,588,786,924,137,164,501,338,205,303,28,957,851,370,17,484,187,791,340,789,866,300,499,831,300,133,811,204,536,875,87,850,451,749,905,620,990,291,713,623,741,25,133,14,7,631,249,507,136,298,47,315,841,667,88,808,173,618,715,937,877,737,313,203,579,817,596,700,787,414,41,852,152,212,246,925,304,375,307,717,734,215,464,390,192,496,796,530,666,590,0,688,141,230,20,504,24,150,952,608,878,805,709,519,798,17,439,540,516,723,898,249,606,468,75,96,390,731,43,411,7,799,816,639,405,101,567,67,881,721,16,175,248,876,461,864,48,51,474,90,508,266,72,294,545,447,343,216,909,424,432,799,533,52,377,368,961,231,56,217,638,425,9,946,206,915,428,980,686]
8

[6,5,4,3,2,1]
2

[9,9,9]
4

[1,1,1]
3

[1,1,12,31,2,1,4,5,6,7,10,2,3,4,59,1,23]
5
"""
from collections import defaultdict
class Solution:
    def minDifficulty(self, jobDifficulty: List[int], d: int) -> int:
        n = len(jobDifficulty)
        if n < d:
            return -1
        dp = [[defaultdict(lambda: float('inf')) for _ in range(d+1)] for _ in range(n+1)]
        dp[0][0][0] = 0
        for i in range(0, n):
            for j in range(0, d+1):
                for k in dp[i][j].keys():
                    job_d = jobDifficulty[i]
                    if 0 < j:
                        if job_d <= k:
                            dp[i+1][j][k] = min(dp[i][j][k], dp[i+1][j][k])
                        else:
                            dp[i+1][j][job_d] = min(dp[i][j][k] + job_d - k, dp[i+1][j][job_d])
                    if j < d:
                        dp[i+1][j+1][job_d] = min(dp[i][j][k] + job_d, dp[i+1][j+1][job_d])

        return min(dp[n][d].values())
